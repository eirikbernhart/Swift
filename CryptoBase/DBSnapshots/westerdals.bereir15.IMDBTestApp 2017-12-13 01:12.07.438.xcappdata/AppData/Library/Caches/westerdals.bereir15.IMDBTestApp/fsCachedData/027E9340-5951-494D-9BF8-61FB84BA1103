
    










<!DOCTYPE html>
<html lang="en">
<head>
    

    
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <meta name="description" content="JSON Blob is a web-based tool to create, edit, view, format, and share JSON. It shows your JSON side by side in a clear, editable tree-view and in formatted plain text. You can save your JSON and share it via URL with anyone">
    <meta name="keywords" content="jsonblob, jsobblob.com, json, editor, formatter, online, format, parser, json editor, jsonblob, json blob, online json editor, javascript, javascript object notation, tools, tool, json tools, tree-view, open source, free, json parser, json parser online, json formatter, json formatter online, online json formatter, online json parser, format json online, jsbin, http, API">
    <meta name="author" content="Tristan Burch">
    <link rel="shortcut icon" href="/assets/favicon.ico">

    
        <title>JSON Blob | 3516a1b8-c49b-11e7-9514-83e4dd4f92b4</title>
    

    <link href="/assets/css/bootstrap/bootstrap.min.css" rel="stylesheet">
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">

    <link href="/assets/css/base.css" rel="stylesheet">

    <!-- Additional style sheets files -->
    
    <link rel="stylesheet" type="text/css" href="/assets/css/jsoneditor/jsoneditor-min.css">
    <link rel=" stylesheet" type="text/css" href="/assets/css/joyride/joyride-2.1.css">


    <!--[if lt IE 9]>
    <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="//oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-36870706-1', 'auto');
    ga('require', 'displayfeatures');
    ga('send', 'pageview');
</script>

    

    
</head>

<body>

<div class="navbar navbar-default navbar-static-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">JSON Blob</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li><a href="new" id="new"><span class="glyphicon glyphicon-file"></span> New</a></li>
                
    <li><a id="save"><span class="glyphicon glyphicon-floppy-disk"></span> Save</a></li>
    <li><a id="clear"><span class="glyphicon glyphicon-remove"></span> Clear</a></li>
    <li><a id="makeRequest"><span class="glyphicon glyphicon-play"></span> Make Request</a></li>
    <li><a id="createGist"><span class="fa fa-github"></span> Create Gist</a></li>
    <li><a id="tour"><span class="fa fa-lightbulb-o"></span> Tour</a></li>

            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li><a href="/about"><i class="fa fa-question"></i> About</a></li>
                <li><a id="api" href="/api"><i class="fa fa-arrows-h"></i> API</a></li>
            </ul>
        </div>
    </div>
</div>


    <!-- Begin page content -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-6">
                        <div id="codeEditor"></div>
                    </div>
                    <div class="col-md-6">
                        <div id="treeEditor"></div>
                    </div>
                </div>
                <div class="row col-md-12">
                    <p>&copy; 2017 <a href="http://tristanburch.com" target="_blank">Tristan Burch</a> </p>
                </div>
            </div>
            <div class="col-md-2">
                <div class="row">
                    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                    <ins class="adsbygoogle"
                         style="display:block"
                         data-ad-client="ca-pub-6168248064103889"
                         data-ad-slot="5739407042"
                         data-ad-format="auto"></ins>
                    <script>
                        (adsbygoogle = window.adsbygoogle || []).push({});
                    </script>
                </div>
            </div>
        </div>
    </div>

    <div id="invalidJson" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Invalid JSON!" aria-hidden="true">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Looks like you have some invalid JSON</h4>
                </div>
                <div class="modal-body">
                    <p>Please fix it before saving!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>

    <div id="errorSavingJson" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Invalid JSON!" aria-hidden="true">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">There was an error saving your JSON Blob</h4>
                </div>
                <div class="modal-body">
                    <p>Please try again in a few minutes</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>

    <div id="blobCreated" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="JSON Blob saved!" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Your JSON Blob is saved!</h4>
                </div>
                <div class="modal-body">
                    <p>You can access the blob directly at <code id="jsonBlobUrl"></code>.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="gistCreated" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="JSON Blob saved!" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Your Gist was created!</h4>
                </div>
                <div class="modal-body">
                    <p>You can access the gist <a id="gistUrl" target="_blank" href="#">here</a>.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="makeRequestFailure" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="JSON Blob saved!" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">We couldn't make your request!</h4>
                </div>
                <div class="modal-body">
                    <p>We weren't able to successfully make a request to <code class="requestedUrl"></code>. <span id="reason" style="display: none">The HTTP error returned was <code id="errorReason"></code>.</span></p>
                    <p style="display: none" class="crossSiteExplaination">This is likely because of a <a target="_blank" href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS">Cross-site HTTP</a> request and your server not having the appropriate <code>Access-Control-Allow-Origin</code> and <code>Access-Control-Allow-Methods</code> headers.</p>
                    <p style="display: none" class="crossSiteExplaination">Adding the following response headers to <code>OPTION</code> requests sent to <code class="requestedUrl"></code> should solve the problem:</p>
                    <ul style="display: none" class="crossSiteExplaination">
                        <li><code>Access-Control-Allow-Origin: <span id="Access-Control-Allow-Origin"></span></code></li>
                        <li><code>Access-Control-Allow-Methods: POST, PUT, DELETE, HEAD, PATCH, OPTIONS</code></li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="makeRequestSuccess" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="JSON Blob saved!" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">We made your request!</h4>
                </div>
                <div class="modal-body">
                    <p>Your request to <code class="requestedUrl"></code> returned a status code of <code id="statusCode"></code>.</p>
                    <p>The headers returned in the response were:</p>
                    <ul id="responseHeaders"></ul>
                    <p>The response body was: <pre id="responseBody"></pre></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="makeRequestModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="Make Request" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Make a request using your JSON Blob</h4>
                </div>
                <div class="modal-body">
                    <p>
                    <div class="input-group">
                        <span class="input-group-addon">URL</span>
                        <input type="text" class="form-control" placeholder="https://jsonblob.com/api/jsonBlob" id="requestUrl" />
                    </div>
                    </p>

                    <div class="well">
                        <label for="exampleInputEmail1">Headers</label>
                        <table id="requestHeaders">
                            <tr class="requestHeader">
                                <td>
                                    <div class="input-group">
                                        <span class="input-group-addon">Header</span>
                                        <input type="text" class="form-control headerName" value="Content-Type">
                                        <input type="text" class="form-control headerValue" value="application/json">
                                        <span class="input-group-addon removeHeaderButton"><a href="#">&times;</a></span>
                                    </div>
                                </td>
                            </tr>
                            <tr class="headerSpacer"><td>&NonBreakingSpace;</td></tr>
                            <tr class="requestHeader">
                                <td>
                                    <div class="input-group">
                                        <span class="input-group-addon">Header</span>
                                        <input type="text" class="form-control headerName" value="Accept">
                                        <input type="text" class="form-control headerValue" value="application/json">
                                        <span class="input-group-addon removeHeaderButton"><a href="#">&times;</a></span>
                                    </div>
                                </td>
                            </tr>
                            <tr class="headerSpacer"><td>&NonBreakingSpace;</td></tr>
                        </table>

                        <div class="btn-group">
                            <button class="btn btn-default" id="addHeaderButton">Add another header</button>
                        </div>
                    </div>

                    <hr>

                    <div class="btn-group">
                        <button class="btn btn-default btn-primary makeRequestButton">POST</button>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-default btn-primary makeRequestButton">PUT</button>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-default btn-primary makeRequestButton">DELETE</button>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-default btn-primary makeRequestButton">HEAD</button>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-default btn-primary makeRequestButton">PATCH</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <ol id="tourContent" data-version="1">
        <li data-id="codeEditor" data-text="Got it!" data-options="tipLocation:left">
            <h2>Edit your JSON</h2>
            <p>Edit your JSON Blob using the built in text editor.</p>
            <p>Watch the left hand column for syntax errors!</p>
        </li>
        <li data-id="treeEditor" data-text="What next?" data-options="tipLocation:right">
            <h2>Tweak your JSON</h2>
            <p>Use the Tree Editor to modify your JSON Blob without having to worry about syntax issues.</p>
            <p>Use the buttons on the left to modify your JSON.</p>
        </li>
        <li data-id="save" data-text="Sweet!" data-options="tipLocation:top">
            <h2>Save your JSON</h2>
            <p>Save your JSON Blob so you can share it with others or come back to work on it later.</p>
        </li>
        <li data-id="makeRequest" data-text="Awesome!" data-options="tipLocation:top">
            <h2>Send your JSON</h2>
            <p>Send your JSON Blob as a HTTP request to any server who will accept it.</p>
        </li>
        <li data-id="createGist" data-text="Anything else?" data-options="tipLocation:top">
            <h2>Export a Gist</h2>
            <p>Export your JSON Blob as a Gist to GitHub</p>
        </li>
        <li data-text="Let me get started!">
            <h2>Use our HTTP API</h2>
            <p>You can create, modify, and delete your JSON Blobs with our <a href="/api" target="_blank">API</a>.</p>
        </li>
    </ol>


<div class="github-fork-ribbon-wrapper right-bottom hidden-print hidden-sm hidden-xs">
    <div class="github-fork-ribbon">
        <a href="https://github.com/tburch/jsonblob" target="_blank">Fork me on GitHub</a>
    </div>
</div>

<script src="/assets/js/jquery/1.11.0.min.js"></script>
<script src="/assets/js/bootstrap/bootstrap.min.js"></script>

<!-- Additional JavaScript files -->

    <script type="text/javascript" src="/assets/js/jsoneditor/jsoneditor-min.js"></script>
    <script type="text/javascript" src="/assets/js/ace/ace-min.js"></script>
    <script type="text/javascript" src="/assets/js/ace/mode-json.js"></script>
    <script type="text/javascript" src="/assets/js/ace/theme-textmate.js"></script>
    <script type="text/javascript" src="/assets/js/ace/theme-jsoneditor.js"></script>
    <script type="text/javascript" src="/assets/js/base64.js"></script>
    <script type="text/javascript" src="/assets/js/json2.js"></script>
    <script type="text/javascript" src="/assets/js/jwerty/jwerty.js"></script>
    <script type="text/javascript" src="/assets/js/jquery/jquery.cookie.js"></script>
    <script type="text/javascript" src="/assets/js/joyride/jquery.joyride-2.1.js"></script>

    <script id="headerTemplate" type="text/x-jquery-tmpl">
        <tr class="requestHeader">
            <td>
                <div class="input-group">
                    <span class="input-group-addon">Header</span>
                    <input type="text" class="form-control headerName" placeholder="Header Name">
                    <input type="text" class="form-control headerValue" placeholder="Header Value">
                    <span class="input-group-addon removeHeaderButton"><a href="#">&times;</a></span>
                </div>
            </td>
        </tr>
        <tr class="headerSpacer"><td>&NonBreakingSpace;</td></tr>
    </script>

    <script type="text/javascript">
    
        var blobId = "3516a1b8-c49b-11e7-9514-83e4dd4f92b4";
        ga('send', 'event', "Blobs", "load", blobId);
    

    
        var json = JSON.parse("[  {    \"title\": \"Titanic\",    \"id\": \"1\",    \"imdbRating\": 3.8,    \"description\": \"Fun movie\"  }]");
    

        $.cookie.json = true;

        var app = {};
        app.tourVersion = $("#tourContent").data("version");
        app.tourCookie = "jsonBlobTour";
        app.treeEditor = null;
        app.codeEditor = null;
        app.isEditorSyncChange = false;
        app.unsavedChanges = false;
        app.apiBase = "/api/jsonBlob";

        function sizing() {
            var bodyHeight = $(window).height();
            var navBarHeight = $("#navbar").height();
            var editorHeight = bodyHeight - navBarHeight - 100; //why 100? I don't know...
            $("#codeEditor, #treeEditor").height(editorHeight+"px");
            app.codeEditor.resize();
        }

        $('#tour').click(function() {
            if (blobId) {
                ga('send', 'event', "Tour", "start", blobId);
            } else {
                ga('send', 'event', "Tour", "start");
            }
            $('#tourContent').joyride({
                autoStart: true,
                expose: true,
                modal: true,
                tipAnimation: 'pop',
                tipAnimationFadeSpeed: 300,
                cookieMonster: true,
                cookieName: 'jsonblobTour',
                cookieDomain: true,
                postRideCallback: function () {
                    if (blobId) {
                        ga('send', 'event', "Tour", "complete", blobId);
                    } else {
                        ga('send', 'event', "Tour", "complete");
                    }
                },
                'postStepCallback': function (index, tip) {
                    if (blobId) {
                        ga('send', 'event', "Tour", "step", blobId, index);
                    } else {
                        ga('send', 'event', "Tour", "step", null, index);
                    }
                }
            });
        });

        $(document).ready(function() {
            sizing();
        });
        $(window).resize(sizing);
        $(".col-md-2").click(function() {
            app.adClick = true;
        });
        $(window).bind('beforeunload', function(event) {
            if (app.unsavedChanges === true && !app.adClick) {
                return "You have unsaved work, it will be lost if you leave this page.";
            }
        });

        $("#createGist").click(function() {
            if (blobId) {
                ga('send', 'event', "Blobs", "gist", blobId);
            } else {
                ga('send', 'event', "Blobs", "gist");
            }

            var gist = {
                "description": "JSON Blob from " + document.URL,
                "public": false,
                "files": {}
            };
            var gistFileContent = {
                "content": app.codeEditor == app.lastChanged ? app.codeEditor.getText() : app.treeEditor.getText()
            };
            gist.files[(blobId ? blobId : "blob") + ".json"] = gistFileContent;

            $.ajax({
                dataType: "json",
                type: "POST",
                url: 'https://api.github.com/gists',
                cache: false,
                data: JSON.stringify(gist),
                success: function(data, textStatus, jqXHR) {
                    if (data.html_url) {
                        $("#gistUrl").attr("href", data.html_url);
                        $("#gistCreated").modal('show');
                    }
                }
            });
        });

        $("#clear").click(function() {
            if (blobId) {
                ga('send', 'event', "Blobs", "clear", blobId);
            } else {
                ga('send', 'event', "Blobs", "clear");
            }
            app.codeEditor.set({});
            app.treeEditor.set({});
            blobId = null;
            app.unsavedChanges = null;
            history.pushState(null, "JSON Blob", "/");
        });

        var removeHeader = function() {
            var tr = $(this).parents("tr.requestHeader");
            var trSpacer = tr.next();
            tr.remove();
            trSpacer.remove();
            return false;
        };

        $("span.removeHeaderButton").on("click", removeHeader);

        $(".makeRequestButton").click(function() {
            var url = $("#requestUrl").val();

            if (!url) {
                alert("Please enter a URL for the request to be sent to!");
                return false;
            }

            if (blobId) {
                ga('send', 'event', "Blobs", "makeRequest", blobId);
            } else {
                ga('send', 'event', "Blobs", "makeRequest");
            }

            var method = $(this).text();
            var headers = {};

            $(".requestHeader").each(function() {
                var headerName = $(this).find("input.headerName").val();
                var headerValue = $(this).find("input.headerValue").val();
                if (headerName) {
                    headers[headerName] = headerValue;
                }
            });

            var jsonString = app.codeEditor == app.lastChanged ? app.codeEditor.getText() : app.treeEditor.getText();

            var request = {
                type: method,
                url: url,
                headers: headers,
                data: jsonString,
                success: function(data, textStatus, jqXHR) {
                    $("#statusCode").text(jqXHR.status);
                    $(".requestedUrl").text($("#requestUrl").val());
                    $("#responseBody").text(JSON.stringify(data, undefined, 4));

                    var headers = jqXHR.getAllResponseHeaders().split(/\n/);
                    if (headers.length == 0) {
                       $("#responseHeaders").remove();
                    } else {
                        for (var i = 0; i < headers.length; i++) {
                            if (headers[i]) {
                                $("<li><code>" + headers[i] + "</code></li>").appendTo("#responseHeaders");
                            }
                        }
                    }

                    $('#makeRequestModal').modal('hide');
                    $('#makeRequestSuccess').modal('show');

                    ga('send', 'event', "Blobs", "makeRequestSuccess");
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    if (errorThrown) {
                        $(".crossSiteExplaination").hide();
                        $("#errorReason").text(errorThrown + (jqXHR.status ? (" (" + jqXHR.status + ")") : ""));
                        $("#reason").show();
                    } else {
                        $("#reason").hide();
                        $(".crossSiteExplaination").show();
                        $("#Access-Control-Allow-Origin").text(window.location.protocol + "://" +window.location.host);
                    }
                    $(".requestedUrl").text($("#requestUrl").val());

                    $("#makeRequestModal").modal('hide');
                    $("#makeRequestFailure").modal('show');
                    ga('send', 'event', "Blobs", "makeRequestFailure");
                },
                cache: false
            };
            $.ajax(request);
        });

        $("#addHeaderButton").click(function() {
            var newHeader = $($("script#headerTemplate").html());
            newHeader.find("span.removeHeaderButton").on("click", removeHeader);
            $("#requestHeaders").append(newHeader);
        });

        $("#makeRequest").click(function() {
            $('#makeRequestModal').modal('show');
        })

        jwerty.key('ctrl+s', function() {
            $("#save").click();
        });

        $("#save").click(function() {
            var jsonString = app.codeEditor == app.lastChanged ? app.codeEditor.getText() : app.treeEditor.getText();
            var valid = !isValidJson(jsonString);

            if (blobId) {
                ga('send', 'event', "Blobs", "save", blobId, valid ? 1 : 0);
            } else {
                ga('send', 'event', "Blobs", "save", null, valid ? 1 : 0);
            }

            if (valid) {
                $('#invalidJson').modal('show');
                return;
            }

            var request;
            if (blobId == null) {
                request = {
                    type: "POST",
                    url: app.apiBase,
                    headers: {'Content-Type': 'application/json', 'Accept':'application/json'},
                    data: jsonString,
                    success: function(data, textStatus, jqXHR) {
                        var locationHeader = jqXHR.getResponseHeader("Location");
                        var parts = locationHeader.split("/");
                        blobId = parts[parts.length - 1];
                        history.pushState(null, "JSON Blob " + blobId, "/" + blobId);
                        $("#jsonBlobUrl").text(locationHeader.replace(app.apiBase, ""));
                        $('#blobCreated').modal('show');

                        $('#blobCreated').on('hidden.bs.modal', function (e) {
                            window.location = locationHeader.replace(app.apiBase, "");
                        })
                        app.unsavedChanges = false;
                        return;
                    },
                    error: function() {
                        app.unsavedChanges = true;
                        $('#errorSavingJson').modal('show');
                    },
                    cache: false
                };
            } else {
                var blobApiUrl = [app.apiBase, blobId].join("/")
                request = {
                    type: "PUT",
                    url: blobApiUrl,
                    headers: {'Content-Type': 'application/json', 'Accept':'application/json'},
                    data: jsonString,
                    success: function(data, textStatus, jqXHR) {
                        app.unsavedChanges = false;
                        return;
                    },
                    error: function() {
                        app.unsavedChanges = true;
                        $('#errorSavingJson').modal('show');
                    },
                    cache: false
                };
            }
            $.ajax(request);
        });

        // Store whether tree editor or code editor is last changed
        app.lastChanged = undefined;

        // code editor
        app.isEditorSyncChange = true;
        var container = document.getElementById("codeEditor");
        app.codeEditor = new jsoneditor.JSONEditor(container, {
            mode: 'code',
            change: function () {
                if (!app.isEditorSyncChange) {
                    app.lastChanged = app.codeEditor;
                    codeToTree();
                    if (app.unsavedChanges != null) {
                        app.unsavedChanges = true;
                    }
                }
            },
            error: function (err) {
                console.log(err);
            }
        }, json);

        // tree editor
        container = document.getElementById("treeEditor");
        app.treeEditor = new jsoneditor.JSONEditor(container, {
            mode: 'tree',
            change: function () {
                if (!app.isEditorSyncChange) {
                    app.lastChanged = app.treeEditor;
                    treeToCode();
                    if (app.unsavedChanges != null) {
                        app.unsavedChanges = true;
                    }
                }
            },
            error: function (err) {
                console.log(err);
            }
        }, json);
        app.isEditorSyncChange = false;

        function isValidJson(jsonString) {
            try {
                JSON.parse(jsonString);
                return true;
            } catch (err) {
                return false;
            }
        }

        function codeToTree() {
            setTimeout(
                function() {
                    var jsonString = app.codeEditor.getText();
                    if (jsonString != undefined && app.lastChanged == app.codeEditor && isValidJson(jsonString)) {
                        app.isEditorSyncChange = true;
                        var json = app.codeEditor.get();
                        if (json != undefined) {
                            app.treeEditor.set(json);
                        }
                        app.isEditorSyncChange = false;
                    }
                }
            , 10);
        }

        function treeToCode() {
            setTimeout(
                function() {
                    var jsonString = app.treeEditor.getText();
                    if (jsonString != undefined && app.lastChanged == app.treeEditor && isValidJson(jsonString)) {
                        app.isEditorSyncChange = true;
                        var json = app.treeEditor.get();
                        if (json != undefined) {
                            app.codeEditor.set(json);
                        }
                        app.isEditorSyncChange = false;
                    }
                }
            , 10);
        }
    </script>

</body>
</html>

